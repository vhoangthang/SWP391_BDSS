@model BloodDonation.Models.BloodRequest

@{
    Layout = "~/Views/Shared/_LayoutStaff.cshtml";
    ViewData["Title"] = "Chi ti·∫øt y√™u c·∫ßu m√°u";
}

<style>
    .bdss-card {
        background: #f8fafc;
        border-radius: 1.1rem;
        box-shadow: 0 2px 12px 0 rgba(0,0,0,0.06);
        border: none;
        margin-bottom: 1.5rem;
    }
    .bdss-section-title {
        color: #2563eb;
        font-weight: 600;
        font-size: 1.15rem;
        margin-bottom: 0.7rem;
        letter-spacing: 0.5px;
    }
    .bdss-label {
        color: #64748b;
        font-weight: 500;
    }
    .bdss-value {
        color: #22223b;
        font-weight: 600;
    }
    .bdss-blood-badge {
        font-size: 1.1rem;
        padding: 0.3em 1em;
        border-radius: 0.7em;
        background: #e0e7ff;
        color: #1e293b;
        font-weight: 600;
        margin-right: 0.5em;
    }
    .bdss-blood-badge-danger {
        background: #fee2e2;
        color: #b91c1c;
    }
    .bdss-blood-badge-warning {
        background: #fef9c3;
        color: #b45309;
    }
    .bdss-icon {
        color: #2563eb;
        margin-right: 0.5em;
    }
    .bdss-card .card-body {
        padding: 1.2rem 1.5rem;
    }
    .bdss-card .card-header {
        background: transparent;
        border-bottom: none;
        font-weight: 600;
        color: #2563eb;
        font-size: 1.1rem;
    }
    .bdss-alert-center {
        position: fixed;
        top: 30px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 9999;
        min-width: 320px;
        max-width: 90vw;
        text-align: center;
        font-size: 1.1rem;
        box-shadow: 0 2px 12px 0 rgba(0,0,0,0.10);
    }
    .bdss-badge-soft {
        display: inline-block;
        padding: 0.35em 1.1em;
        font-size: 1em;
        font-weight: 500;
        border-radius: 2em;
        background: #e0e7ff;
        color: #373a47;
        letter-spacing: 0.02em;
        box-shadow: none;
        border: none;
    }
    .bdss-badge-soft-danger {
        background: #fde8e8;
        color: #b91c1c;
    }
    .bdss-badge-soft-warning {
        background: #fef9c3;
        color: #b45309;
    }
    .bdss-badge-soft-success {
        background: #d1fae5;
        color: #047857;
    }
    .bdss-badge-soft-secondary {
        background: #f3f4f6;
        color: #6b7280;
    }
</style>

<!-- Th√¥ng b√°o trung t√¢m -->
@if (TempData["Message"] != null)
{
    <div class="alert alert-success bdss-alert-center text-center" id="centerAlert" style="padding:2.2rem 1.5rem 1.2rem 1.5rem;">
        <div style="font-size:3rem;line-height:1;">
            <i class="fas fa-check-circle" style="color:#22c55e;"></i>
        </div>
        <div style="font-size:1.2rem;font-weight:600;">@TempData["Message"]</div>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger bdss-alert-center text-center" id="centerAlert" style="padding:2.2rem 1.5rem 1.2rem 1.5rem;">
        <div style="font-size:3rem;line-height:1;">
            <i class="fas fa-times-circle" style="color:#ef4444;"></i>
        </div>
        <div style="font-size:1.2rem;font-weight:600;">@TempData["Error"]</div>
    </div>
}
<script>
    setTimeout(function() {
        var alert = document.getElementById('centerAlert');
        if(alert) alert.style.display = 'none';
    }, 3500);
</script>

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h2 class="mb-1 fw-bold">üìã Chi ti·∫øt y√™u c·∫ßu m√°u</h2>
                    <p class="text-muted mb-0">Th√¥ng tin chi ti·∫øt v·ªÅ y√™u c·∫ßu nh·∫≠n m√°u</p>
                </div>
                <a href="@Url.Action("BloodRequestList", "Staff")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Quay l·∫°i
                </a>
            </div>
        </div>
    </div>

    <!-- Row 1: Th√¥ng tin c∆° s·ªü/y√™u c·∫ßu m√°u + kho m√°u -->
    <div class="row g-4 align-items-start">
        <div class="col-lg-8">
            <div class="row g-4">
                <div class="col-md-6">
                    <div class="card bdss-card h-100">
                        <div class="card-header bdss-section-title">
                            <i class="fas fa-hospital bdss-icon"></i>Th√¥ng tin c∆° s·ªü y t·∫ø
                        </div>
                        <div class="card-body">
                            <div class="mb-2"><span class="bdss-label">T√™n c∆° s·ªü:</span> <span class="bdss-value">@Model.MedicalCenter?.Name</span></div>
                            <div class="mb-2"><span class="bdss-label">ƒê·ªãa ch·ªâ:</span> <span class="bdss-value">@Model.MedicalCenter?.Location</span></div>
                            <div class="mb-2"><span class="bdss-label">S·ªë ƒëi·ªán tho·∫°i:</span> <span class="bdss-value">@Model.MedicalCenter?.ContactNumber</span></div>
                            @* <div class="mb-2"><span class="bdss-label">Email:</span> <span class="bdss-value">@Model.MedicalCenter?.Email</span></div> *@
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card bdss-card h-100">
                        <div class="card-header bdss-section-title">
                            <i class="fas fa-tint bdss-icon"></i>Th√¥ng tin y√™u c·∫ßu m√°u
                        </div>
                        <div class="card-body">
                            <div class="mb-2"><span class="bdss-label">Nh√≥m m√°u:</span> <span class="bdss-blood-badge">@Model.BloodType?.Type</span></div>
                            <div class="mb-2"><span class="bdss-label">S·ªë l∆∞·ª£ng:</span> <span class="bdss-value">@Model.Quantity CC</span></div>
                            <div class="mb-2"><span class="bdss-label">M·ª©c ƒë·ªô:</span>
                                @if (Model.IsEmergency) {
                                    <span class="bdss-badge-soft bdss-badge-soft-danger">Kh·∫©n c·∫•p</span>
                                } else {
                                    <span class="bdss-badge-soft bdss-badge-soft-warning">Th√¥ng th∆∞·ªùng</span>
                                }
                            </div>
                            <div class="mb-2"><span class="bdss-label">Ng√†y y√™u c·∫ßu:</span> <span class="bdss-value">@Model.RequestDate.ToString("dd/MM/yyyy HH:mm")</span></div>
                            <div class="mb-2"><span class="bdss-label">Tr·∫°ng th√°i:</span>
                                @switch (Model.Status)
                                {
                                    case "Pending": <span class="bdss-badge-soft bdss-badge-soft-warning">Ch·ªù duy·ªát</span>; break;
                                    case "Approved": <span class="bdss-badge-soft bdss-badge-soft-success">ƒê√£ duy·ªát</span>; break;
                                    case "Completed": <span class="bdss-badge-soft bdss-badge-soft-success">Ho√†n th√†nh</span>; break;
                                    case "Rejected": <span class="bdss-badge-soft bdss-badge-soft-danger">T·ª´ ch·ªëi</span>; break;
                                    default: <span class="bdss-badge-soft bdss-badge-soft-secondary">@Model.Status</span>; break;
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Kho m√°u b√™n ph·∫£i (grid nhi·ªÅu c·ªôt) -->
        <div class="col-lg-4">
            <div class="mb-2 fw-bold text-end bdss-section-title">Kho m√°u hi·ªán t·∫°i:</div>
            <div class="row row-cols-2 row-cols-md-2 row-cols-lg-2 row-cols-xl-3 g-2 justify-content-end">
                @{
                    var allInventories = ViewBag.AllBloodInventories as List<BloodDonation.Models.BloodInventory>;
                    if (allInventories != null && allInventories.Count > 0)
                    {
                        foreach (var inv in allInventories)
                        {
                            var isLow = inv.Quantity < 5;
                            var badgeClass = isLow ? "bg-danger text-white" : "bg-warning text-dark";
                            var cardBorder = isLow ? "border-danger" : "border-0";
                            var icon = isLow ? "fa-exclamation-triangle text-danger" : "fa-tint text-primary";
                <div class="col mb-2">
                    <div class="card shadow-sm h-100 @cardBorder" style="border-radius: 0.8rem; min-width:120px; min-height: 120px; display: flex; flex-direction: column; justify-content: center;">
                        <div class="card-body d-flex flex-column align-items-center justify-content-center p-2" style="height: 100px;">
                            <div class="mb-1">
                                <i class="fas @icon" style="font-size:1.1rem;"></i>
                            </div>
                            <div class="fw-bold fs-6 mb-1 text-uppercase text-center">@inv.BloodType?.Type</div>
                            <div class="mb-1">
                                <span class="badge @badgeClass px-2 py-1" style="font-size:0.95rem;">
                                    @inv.Quantity.ToString("0.##") ƒë∆°n v·ªã
                                </span>
                            </div>
                            <div class="text-muted text-center" style="font-size:0.8em;">
                                <i class="far fa-clock me-1"></i>@inv.LastUpdated.ToString("HH:mm dd/MM")
                            </div>
                        </div>
                    </div>
                </div>
                        }
                    }
                    else
                    {
                        <div class="col-12">
                            <div class="alert alert-warning">Kh√¥ng c√≥ d·ªØ li·ªáu kho m√°u.</div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    <!-- Ng∆∞·ªùi hi·∫øn m√°u g·∫ßn nh·∫•t (section ri√™ng) -->
    <div class="row g-4">
        <div class="col-12">
            <div class="card bdss-card">
                <div class="card-header bdss-section-title">
                    <i class="fas fa-users bdss-icon"></i>Ng∆∞·ªùi hi·∫øn m√°u g·∫ßn nh·∫•t
                </div>
                <div class="card-body p-3">
                    @{
                        var donors = ViewBag.NearbyDonors as List<BloodDonation.Models.Donor>;
                    }
                    @if (donors != null && donors.Count > 0)
                    {
                        <div class="table-responsive">
                            <table class="table table-sm table-hover align-middle mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th>T√™n</th>
                                        <th>SƒêT</th>
                                        <th>ƒê·ªãa ch·ªâ</th>
                                        <th>Email</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var donor in donors)
                                    {
                                        <tr>
                                            <td><strong>@donor.Name</strong></td>
                                            <td>@donor.ContactNumber</td>
                                            <td>@donor.Address</td>
                                            <td>@donor.Account?.Email</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info mb-0">Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi hi·∫øn m√°u ph√π h·ª£p.</div>
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- L√Ω do y√™u c·∫ßu (section ri√™ng) -->
    @if (!string.IsNullOrEmpty(Model.Reason))
    {
        <div class="row g-4">
            <div class="col-12">
                <div class="card bdss-card">
                    <div class="card-header bdss-section-title">
                        <i class="fas fa-sticky-note bdss-icon"></i>L√Ω do y√™u c·∫ßu
                    </div>
                    <div class="card-body">
                        <p class="mb-0">@Model.Reason</p>
                    </div>
                </div>
            </div>
        </div>
    }
    <!-- X·ª≠ l√Ω y√™u c·∫ßu m√°u (section ri√™ng) -->
    <div class="row g-4">
        <div class="col-12">
            <div class="card bdss-card">
                <div class="card-header bdss-section-title">
                    <i class="fas fa-cogs bdss-icon"></i>X·ª≠ l√Ω y√™u c·∫ßu m√°u
                </div>
                <div class="card-body">
                    @if (Model.Status == "Pending")
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <form method="post" action="@Url.Action("ProcessBloodRequestFromDetails", "Staff")" class="d-inline">
                                    <input type="hidden" name="bloodRequestId" value="@Model.BloodRequestID" />
                                    <input type="hidden" name="action" value="approve" />
                                    <button type="submit" class="btn btn-success me-2">
                                        <i class="fas fa-check me-2"></i>Duy·ªát y√™u c·∫ßu
                                    </button>
                                </form>
                                <form method="post" action="@Url.Action("ProcessBloodRequestFromDetails", "Staff")" class="d-inline">
                                    <input type="hidden" name="bloodRequestId" value="@Model.BloodRequestID" />
                                    <input type="hidden" name="action" value="reject" />
                                    <button type="submit" class="btn btn-danger" onclick="return confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën t·ª´ ch·ªëi y√™u c·∫ßu n√†y?')">
                                        <i class="fas fa-times me-2"></i>T·ª´ ch·ªëi
                                    </button>
                                </form>
                            </div>
                        </div>
                    }
                    else if (Model.Status == "Approved")
                    {
                        <form method="post" action="@Url.Action("ProcessBloodRequestFromDetails", "Staff")">
                            <input type="hidden" name="bloodRequestId" value="@Model.BloodRequestID" />
                            <input type="hidden" name="action" value="complete" />
                            <div class="row">
                                <div class="col-md-4">
                                    <label class="form-label fw-bold">Ch·ªçn nh√≥m m√°u cung c·∫•p:</label>
                                    <select name="selectedBloodTypeId" class="form-select" required>
                                        <option value="">-- Ch·ªçn nh√≥m m√°u --</option>
                                        @foreach (var bloodType in ViewBag.AllBloodTypes)
                                        {
                                            var allInventories = ViewBag.AllBloodInventories as List<BloodDonation.Models.BloodInventory>;
                                            var inventory = allInventories?.FirstOrDefault(b => b.BloodTypeID == bloodType.BloodTypeID);
                                            var availableQuantity = inventory?.Quantity ?? 0;
                                            var isCompatible = bloodType.BloodTypeID == Model.BloodTypeID || 
                                                              (Model.BloodType.Type == "O-" && bloodType.Type == "O-") ||
                                                              (Model.BloodType.Type == "O+" && (bloodType.Type == "O+" || bloodType.Type == "O-")) ||
                                                              (Model.BloodType.Type == "A-" && (bloodType.Type == "A-" || bloodType.Type == "O-")) ||
                                                              (Model.BloodType.Type == "A+" && (bloodType.Type == "A+" || bloodType.Type == "A-" || bloodType.Type == "O+" || bloodType.Type == "O-")) ||
                                                              (Model.BloodType.Type == "B-" && (bloodType.Type == "B-" || bloodType.Type == "O-")) ||
                                                              (Model.BloodType.Type == "B+" && (bloodType.Type == "B+" || bloodType.Type == "B-" || bloodType.Type == "O+" || bloodType.Type == "O-")) ||
                                                              (Model.BloodType.Type == "AB-" && (bloodType.Type == "AB-" || bloodType.Type == "A-" || bloodType.Type == "B-" || bloodType.Type == "O-")) ||
                                                              (Model.BloodType.Type == "AB+" && true);
                                            var isAvailable = availableQuantity >= Model.Quantity && isCompatible;
                                            var optionText = $"{bloodType.Type} - C√≥ s·∫µn: {availableQuantity} CC";
                                            if (!isCompatible) { optionText += " (Kh√¥ng t∆∞∆°ng h·ª£p)"; }
                                            if (availableQuantity < Model.Quantity) { optionText += " (Thi·∫øu m√°u)"; }
                                            if (isAvailable)
                                            {
                                                <option value="@bloodType.BloodTypeID" data-quantity="@availableQuantity">@optionText</option>
                                            }
                                            else
                                            {
                                                <option value="@bloodType.BloodTypeID" disabled data-quantity="@availableQuantity">@optionText</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label fw-bold">S·ªë l∆∞·ª£ng cung c·∫•p (CC):</label>
                                    <input type="number" name="quantity" class="form-control" value="@Model.Quantity" min="0" max="@Model.Quantity" step="0.01" required />
                                </div>
                                <div class="col-md-4 d-flex align-items-end">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-tint me-2"></i>Ho√†n t·∫•t cung c·∫•p m√°u
                                    </button>
                                </div>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<link href="/css/select2.min.css" rel="stylesheet" />
<script src="/js/select2.min.js"></script>
<script>
    $(document).ready(function() {
        $('select[name="selectedBloodTypeId"]').select2({
            width: '100%',
            placeholder: 'Ch·ªçn nh√≥m m√°u...',
            allowClear: true
        });
    });
</script> 