@model List<BloodDonation.Models.BloodRequest>
@{
    Layout = "~/Views/Shared/_LayoutMedicalCenter.cshtml";
}
<div class="main-content blood-request-list-page">
    <div class="brl-header">
        <h1 class="brl-title"><i class="fas fa-clipboard-list"></i> Danh s√°ch y√™u c·∫ßu nh·∫≠n m√°u</h1>
        <p class="brl-desc">Qu·∫£n l√Ω c√°c y√™u c·∫ßu nh·∫≠n m√°u c·ªßa trung t√¢m b·∫°n</p>
        <div class="brl-user">üë§ @Context.Session.GetString("Username")</div>
    </div>
    <div class="brl-stats-row">
        <div class="brl-stat"><span class="brl-stat-number">@Model.Count(r => r.Status == "Pending")</span><span class="brl-stat-label">Ch·ªù duy·ªát</span></div>
        <div class="brl-stat"><span class="brl-stat-number">@Model.Count(r => r.Status == "Approved")</span><span class="brl-stat-label">ƒê√£ duy·ªát</span></div>
        <div class="brl-stat"><span class="brl-stat-number">@Model.Count(r => r.Status == "Completed")</span><span class="brl-stat-label">Ho√†n t·∫•t</span></div>
        <div class="brl-stat"><span class="brl-stat-number">@Model.Count(r => r.IsEmergency)</span><span class="brl-stat-label">Kh·∫©n c·∫•p</span></div>
    </div>
    <div class="brl-filter-row">
        <input type="text" class="brl-input" id="searchInput" placeholder="üîç T√¨m ki·∫øm theo ID...">
        <select class="brl-select" id="statusFilter">
            <option value="">T·∫•t c·∫£ tr·∫°ng th√°i</option>
            <option value="Pending">Pending</option>
            <option value="Approved">Approved</option>
            <option value="Completed">Completed</option>
            <option value="Rejected">Rejected</option>
            <option value="Canceled">Canceled</option>
        </select>
        <select class="brl-select" id="bloodTypeFilter">
            <option value="">T·∫•t c·∫£ nh√≥m m√°u</option>
            <option value="A+">A+</option>
            <option value="A-">A-</option>
            <option value="B+">B+</option>
            <option value="B-">B-</option>
            <option value="AB+">AB+</option>
            <option value="AB-">AB-</option>
            <option value="O+">O+</option>
            <option value="O-">O-</option>
        </select>
        <select class="brl-select" id="emergencyFilter">
            <option value="">T·∫•t c·∫£ m·ª©c ƒë·ªô</option>
            <option value="true">Kh·∫©n c·∫•p</option>
            <option value="false">Th√¥ng th∆∞·ªùng</option>
        </select>
    </div>
    <div class="brl-table-wrapper">
        <table class="brl-table" id="requestTable">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Nh√≥m m√°u</th>
                    <th>S·ªë l∆∞·ª£ng (CC)</th>
                    <th>Ng√†y y√™u c·∫ßu</th>
                    <th>L√Ω do</th>
                    <th>M·ª©c ƒë·ªô</th>
                    <th>T∆∞∆°ng h·ª£p</th>
                    <th>Tr·∫°ng th√°i</th>
                    <th>Thao t√°c</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var request in Model)
                {
                    <tr>
                        <td>@request.BloodRequestID</td>
                        <td><span class="badge bg-info">@request.BloodType?.Type</span></td>
                        <td>@request.Quantity</td>
                        <td>
                            @if (request.RequestDate.TimeOfDay.TotalMinutes == 0)
                            {
                                @request.RequestDate.ToString("dd/MM/yyyy")
                            }
                            else
                            {
                                @request.RequestDate.ToString("dd/MM/yyyy HH:mm")
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(request.Reason))
                            {
                                <button type="button" class="btn btn-outline-info btn-sm px-3" data-bs-toggle="modal" data-bs-target="#reasonModal" data-reason="@request.Reason">
                                    <i class="fas fa-eye"></i> Xem l√Ω do
                                </button>
                            }
                            else
                            {
                                <span class="text-muted">-</span>
                            }
                        </td>
                        <td>
                            @if (request.IsEmergency)
                            {
                                <span class="emergency-badge">üö® Kh·∫©n c·∫•p</span>
                            }
                            else
                            {
                                <span class="badge badge-normal">Th√¥ng th∆∞·ªùng</span>
                            }
                        </td>
                        <td>
                            @if (request.IsCompatible)
                            {
                                <span class="badge bg-success"><i class="fas fa-check"></i> T∆∞∆°ng h·ª£p</span>
                            }
                            else
                            {
                                <span class="badge bg-danger"><i class="fas fa-times"></i> Kh√¥ng t∆∞∆°ng h·ª£p</span>
                            }
                        </td>
                        <td>
                            @{
                                var statusClass = request.Status?.ToLower() switch
                                {
                                    "pending" => "status-pending",
                                    "approved" => "status-approved",
                                    "completed" => "status-completed",
                                    "rejected" => "status-rejected",
                                    "canceled" => "status-rejected",
                                    _ => "status-pending"
                                };
                            }
                            <span class="status-badge @statusClass">@request.Status</span>
                        </td>
                        <td>
                            @if (request.Status == "Pending")
                            {
                                <form asp-action="CancelBloodRequest" asp-controller="MedicalCenter" method="post" style="display:inline;">
                                    <input type="hidden" name="id" value="@request.BloodRequestID" />
                                    <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('B·∫°n c√≥ ch·∫Øc mu·ªën hu·ª∑ y√™u c·∫ßu n√†y?');">
                                        <i class="fas fa-times"></i> Hu·ª∑
                                    </button>
                                </form>
                            }
                            else if (request.Status == "Approved")
                            {
                                <span class="status-approved-action"><i class="fas fa-check-circle"></i> ƒê√£ duy·ªát</span>
                            }
                            else if (request.Status == "Rejected")
                            {
                                <span class="status-rejected-action"><i class="fas fa-ban"></i> B·ªã t·ª´ ch·ªëi</span>
                            }
                            else if (request.Status == "Completed")
                            {
                                <span class="text-success fw-bold"><i class="fas fa-check-circle"></i> ƒê√£ ho√†n t·∫•t</span>
                            }
                            else if (request.Status == "Canceled")
                            {
                                <span class="text-danger fw-bold"><i class="fas fa-ban"></i> ƒê√£ hu·ª∑</span>
                            }
                            else
                            {
                                <span class="text-muted">-</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<!-- Reason Modal -->
<div class="modal fade" id="reasonModal" tabindex="-1" aria-labelledby="reasonModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reasonModalLabel">Chi ti·∫øt l√Ω do</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="reasonText"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        // Filter functionality
        function filterTable() {
            var searchInput = document.getElementById('searchInput').value.toLowerCase();
            var statusFilter = document.getElementById('statusFilter').value;
            var bloodTypeFilter = document.getElementById('bloodTypeFilter').value;
            var emergencyFilter = document.getElementById('emergencyFilter').value;
            
            var table = document.getElementById('requestTable');
            var rows = table.getElementsByTagName('tbody')[0].getElementsByTagName('tr');
            
            for (var i = 0; i < rows.length; i++) {
                var row = rows[i];
                var id = row.cells[0].textContent.toLowerCase();
                var bloodType = row.cells[1].textContent;
                var status = row.cells[7].textContent.trim();
                var emergency = row.cells[5].textContent.includes('Kh·∫©n c·∫•p') ? 'true' : 'false';
                
                var showRow = true;
                
                // Search filter
                if (searchInput && !id.includes(searchInput)) {
                    showRow = false;
                }
                // Status filter (case-sensitive)
                if (statusFilter && status !== statusFilter) {
                    showRow = false;
                }
                // Blood type filter
                if (bloodTypeFilter && bloodType !== bloodTypeFilter) {
                    showRow = false;
                }
                // Emergency filter (compare with Vietnamese)
                if (emergencyFilter && emergency !== emergencyFilter) {
                    showRow = false;
                }
                row.style.display = showRow ? '' : 'none';
            }
        }
        
        // Add event listeners
        document.getElementById('searchInput').addEventListener('input', filterTable);
        document.getElementById('statusFilter').addEventListener('change', filterTable);
        document.getElementById('bloodTypeFilter').addEventListener('change', filterTable);
        document.getElementById('emergencyFilter').addEventListener('change', filterTable);
        
        // Modal functionality
        var reasonModal = document.getElementById('reasonModal');
        if (reasonModal) {
            reasonModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var reason = button.getAttribute('data-reason');
                var reasonText = document.getElementById('reasonText');
                reasonText.textContent = reason;
            });
        }
    </script>
} 