@model List<BloodDonation.Models.Account>
@{
    Layout = null;
    var medicalCenters = ViewBag.MedicalCenters as List<BloodDonation.Models.MedicalCenter>;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Qu·∫£n l√Ω ng∆∞·ªùi d√πng - Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/admin.css" />
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-3 col-lg-2">
                <div class="sidebar">
                    <h3><i class="fas fa-tint"></i> Admin Panel</h3>
                    <ul class="sidebar-menu">
                        <li><a href="@Url.Action("Index", "Admin")"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
                        <li><a href="#" class="active"><i class="fas fa-users"></i> Qu·∫£n l√Ω ng∆∞·ªùi d√πng</a></li>
                        <li><a href="@Url.Action("BloodRequestManagement", "Admin")"><i class="fas fa-clipboard-list"></i> Y√™u c·∫ßu nh·∫≠n m√°u</a></li>
                        <li><a href="@Url.Action("BloodInventoryManagement", "Admin")"><i class="fas fa-boxes"></i> Kho m√°u</a></li>
                        <li><a href="@Url.Action("Logout", "Login")"><i class="fas fa-sign-out-alt"></i> ƒêƒÉng xu·∫•t</a></li>
                    </ul>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-md-9 col-lg-10">
                <div class="main-content">
                    <!-- Header -->
                    <div class="header">
                        <div class="row align-items-center">
                            <div class="col-md-8">
                                <h1 class="mb-0"><i class="fas fa-users text-danger"></i> Qu·∫£n l√Ω ng∆∞·ªùi d√πng</h1>
                                <p class="text-muted mb-0">Qu·∫£n l√Ω t·∫•t c·∫£ t√†i kho·∫£n trong h·ªá th·ªëng</p>
                            </div>
                            <div class="col-md-4">
                                <div class="user-profile">
                                    <a href="#"><i class="fas fa-user-circle"></i> @Context.Session.GetString("Username")</a>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Search Box -->
                    <div class="search-box">
                        <div class="row">
                            <div class="col-md-4">
                                <input type="text" class="form-control" id="searchInput" placeholder="üîç T√¨m ki·∫øm theo username...">
                            </div>
                            <div class="col-md-3">
                                <select class="form-control" id="roleFilter">
                                    <option value="">T·∫•t c·∫£ vai tr√≤</option>
                                    <option value="donor">Ng∆∞·ªùi hi·∫øn m√°u</option>
                                    <option value="staff">Nh√¢n vi√™n</option>
                                    <option value="admin">Admin</option>
                                    <option value="medicalcenter">C∆° s·ªü y t·∫ø</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <!-- Content Card -->
                    <div class="content-card">
                        <div class="table-responsive">
                            <table class="table table-hover" id="userTable">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Username</th>
                                        <th>Email</th>
                                        <th>Vai tr√≤</th>
                                        <th>C·∫•p quy·ªÅn</th>
                                        <th>Trung t√¢m y t·∫ø</th>
                                        <th>Thao t√°c</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var user in Model)
                                    {
                                        <tr>
                                            <td>@user.AccountID</td>
                                            <td>
                                                <strong>@user.Username</strong>
                                            </td>
                                            <td>@user.Email</td>
                                            <td>
                                                @{
                                                    var roleClass = user.Role.ToLower() switch
                                                    {
                                                        "donor" => "role-donor",
                                                        "staff" => "role-staff",
                                                        "admin" => "role-admin",
                                                        "medicalcenter" => "role-medicalcenter",
                                                        _ => "role-donor"
                                                    };
                                                }
                                                <span class="role-badge @roleClass">@user.Role</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@user.PermissionLevel</span>
                                            </td>
                                            <td>
                                                @if (user.MedicalCenter != null)
                                                {
                                                    <span class="text-success">@user.MedicalCenter.Name</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                <div style="display:flex; gap:4px; align-items:center;">
                                                    <select class="form-select form-select-sm" style="width:auto; display:inline-block;" onchange="onRoleChange(@user.AccountID, this)">
                                                        <option value="donor" selected="@(user.Role.ToLower() == "donor")">Donor</option>
                                                        <option value="staff" selected="@(user.Role.ToLower() == "staff")">Staff</option>
                                                        <option value="admin" selected="@(user.Role.ToLower() == "admin")">Admin</option>
                                                        <option value="medicalcenter" selected="@(user.Role.ToLower() == "medicalcenter")">MedicalCenter</option>
                                                    </select>
                                                    <span id="mc-picker-@user.AccountID" style="display:none; margin-left:8px;"></span>
                                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteUser(@user.AccountID, '@user.Username', '@user.Role')" @(user.Role.ToLower()=="admin" ? "disabled" : "")>
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="medicalCenterOverlay" style="display:none; position:fixed; top:0; left:0; width:100vw; height:100vh; background:rgba(0,0,0,0.4); z-index:9999; align-items:center; justify-content:center;">
        <div style="background:#fff; padding:32px 40px; border-radius:12px; box-shadow:0 2px 16px rgba(0,0,0,0.2); min-width:320px; text-align:center; position:relative;">
            <button onclick="closeMedicalCenterOverlay()" style="position:absolute; top:8px; right:12px; background:none; border:none; font-size:20px;">&times;</button>
            <div style="font-size:20px; font-weight:600; color:#c00; margin-bottom:16px;">Vui l√≤ng ch·ªçn c∆° s·ªü y t·∫ø!</div>
            <div>ƒê·ªÉ ph√¢n quy·ªÅn MedicalCenter, b·∫°n c·∫ßn ch·ªçn m·ªôt c∆° s·ªü y t·∫ø c·ª• th·ªÉ cho t√†i kho·∫£n n√†y.</div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/admin.js"></script>
    <script>
    function deleteUser(id, username, role) {
        if (role.toLowerCase() === 'admin') {
            alert('Kh√¥ng th·ªÉ x√≥a t√†i kho·∫£n admin!');
            return;
        }
        if (confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t√†i kho·∫£n ' + username + ' kh√¥ng?')) {
            fetch('/Admin/DeleteUser', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: id })
            })
            .then(res => res.json())
            .then(data => {
                alert(data.message);
                if (data.success) location.reload();
            });
        }
    }

    function onRoleChange(id, selectEl) {
        var newRole = selectEl.value;
        var mcPicker = document.getElementById('mc-picker-' + id);
        if (newRole === 'medicalcenter') {
            // Hi·ªÉn th·ªã dropdown ch·ªçn MedicalCenter
            let html = '<select id="mc-select-' + id + '" class="form-select form-select-sm" style="width:auto; display:inline-block;">';
            html += '<option value="">Ch·ªçn c∆° s·ªü y t·∫ø</option>';
            @foreach (var mc in medicalCenters)
            {
                <text>html += '<option value="@mc.MedicalCenterID">@mc.Name</option>';</text>
            }
            html += '</select>';
            html += '<button class="btn btn-sm btn-success ms-2" onclick="confirmChangeMedicalCenter(' + id + ')">OK</button>';
            mcPicker.innerHTML = html;
            mcPicker.style.display = '';
        } else {
            mcPicker.innerHTML = '';
            mcPicker.style.display = 'none';
            changeUserRole(id, newRole);
        }
    }

    function confirmChangeMedicalCenter(id) {
        var mcSelect = document.getElementById('mc-select-' + id);
        var mcId = mcSelect.value;
        if (!mcId) {
            showMedicalCenterOverlay();
            return;
        }
        changeUserRole(id, 'medicalcenter', mcId);
    }

    function showMedicalCenterOverlay() {
        document.getElementById('medicalCenterOverlay').style.display = 'flex';
    }

    function closeMedicalCenterOverlay() {
        document.getElementById('medicalCenterOverlay').style.display = 'none';
    }

    function changeUserRole(id, newRole, medicalCenterId) {
        var body = { id: id, newRole: newRole };
        if (newRole === 'medicalcenter') body.medicalCenterId = parseInt(medicalCenterId);
        if (newRole.toLowerCase() === 'admin') {
            if (!confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ph√¢n quy·ªÅn admin cho t√†i kho·∫£n n√†y?')) return;
        }
        fetch('/Admin/ChangeUserRole', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(body)
        })
        .then(res => res.json())
        .then(data => {
            alert(data.message);
            if (data.success) location.reload();
        });
    }
    </script>
</body>
</html> 